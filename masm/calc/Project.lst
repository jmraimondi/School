Microsoft (R) Macro Assembler Version 14.14.26430.0	    06/26/18 19:52:10

(calc.asm						     Page 1 - 1


				TITLE      (calc.asm)

				; This program evaluates simple calculations
				; Last update:
				; John Michael Raimondi

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
 = 0000000D			CR	EQU	0Dh
 = 0000000A			LF	EQU	0Ah
 = 0000001B			ESCAPE	EQU	1Bh
 = 00000020			SPC	EQU	20h
 = 0000002A			multOP	EQU	2Ah
 = 0000002B			addOP	EQU	2Bh
 = 0000002D			subOP	EQU	2Dh
 = 0000002F			divOP	EQU	2Fh

 00000000 00000000		fd	dword	?
 00000004 6F 75 74 70 75	ofilename	byte	"output.out", 0
	   74 2E 6F 75 74
	   00

 0000000F 00			buf	byte ?
 00000010  00000064 [		outmem	byte	100	DUP(?)
	    00
	   ]
 00000074 00			buf2 byte ?
 00000075  00000003 [		calcmem	dword	3	DUP(?)
	    00000000
	   ]
 00000000			.code
				;----------------------------------------------------------------
 00000000			myWriteLine PROC	;prints starting at esi stopping at a 0
 00000000			Next:
 00000000  8A 06			mov	al,[esi]
 00000002  3C 00			cmp	al,0
 00000004  74 08			je	lineout
 00000006  E8 00000000 E		call	WriteChar
 0000000B  46				inc	esi
 0000000C  EB F2			jmp	Next
 0000000E			lineout:
 0000000E  C3				ret
 0000000F			myWriteLine	ENDP
				;----------------------------------------------------------------
 0000000F			ItoA	PROC	;eax has #
 0000000F  BB 0000000A			mov	ebx,10
 00000014			next:
 00000014  83 F8 00			cmp	eax,0
 00000017  74 0F			je	done
 00000019  BA 00000000			mov	edx,0
 0000001E  F7 F3			div	ebx
 00000020  80 C2 30			add	dl,30h
 00000023  4E				dec	esi
 00000024  88 16			mov	[esi],dl
 00000026  EB EC			jmp	next
 00000028			done:
 00000028  C3				ret
 00000029			ItoA	ENDP
				;----------------------------------------------------------------
 00000029			countDigits	PROC
 00000029  BB 0000000A			mov	ebx,10
 0000002E  B9 00000000			mov	ecx,0
 00000033			next:
 00000033  83 F8 00			cmp	eax,0
 00000036  74 0A			je	done
 00000038  BA 00000000			mov	edx,0
 0000003D  F7 F3			div	ebx
 0000003F  41				inc	ecx
 00000040  EB F1			jmp	next
 00000042			done:
 00000042  C3				ret
 00000043			countDigits	ENDP
				;----------------------------------------------------------------
 00000043			myWriteToFile	PROC
 00000043			nextchar:
 00000043  8A 02			mov	al,[edx]
 00000045  3C 00			cmp	al,0
 00000047  74 16			je	alldone
 00000049  A1 00000000 R		mov	eax,fd
 0000004E  B9 00000001			mov	ecx,1
 00000053  8B DA			mov	ebx,edx	;save edx
 00000055  E8 00000000 E		call	WriteToFile
 0000005A  8B D3			mov	edx,ebx	;restore edx
 0000005C  42				inc	edx
 0000005D  EB E4			jmp	nextchar
 0000005F			alldone:
 0000005F  C3				ret
 00000060			myWriteToFile	ENDP
				;----------------------------------------------------------------
 00000060			myReadLine	PROC
 00000060			nextread:
 00000060  E8 00000000 E		call	ReadChar
 00000065  88 06			mov	[esi],al
 00000067  E8 00000000 E		call	WriteChar
 0000006C  3C 0D			cmp	al,CR
 0000006E  74 03			je	outofhere
 00000070  46				inc	esi
 00000071  EB ED			jmp	nextread
 00000073			outofhere:
 00000073  C3				ret
 00000074			myReadLine	ENDP
				;----------------------------------------------------------------
 00000074			jmAtoI	PROC
 00000074  BB 00000000			mov	ebx,0
 00000079  B8 00000000			mov	eax,0
 0000007E			nextdigit:
 0000007E  BA 0000000A			mov	edx,10
 00000083  3B FE			cmp	edi,esi
 00000085  74 16			je	alldone
 00000087  8A 1F			mov	bl,[edi]
 00000089  80 FB 30			cmp	bl,'0'
 0000008C  7C 0F			jl	alldone
 0000008E  80 FB 39			cmp	bl,'9'
 00000091  7F 0A			jg	alldone
 00000093  F7 E2			mul	edx
 00000095  80 EB 30			sub	bl,30h
 00000098  03 C3			add	eax,ebx
 0000009A  47				inc	edi
 0000009B  EB E1			jmp	nextdigit
 0000009D			alldone:
 0000009D  83 F8 00			cmp	eax,0
 000000A0  75 01			jne	store
 000000A2  C3				ret
 000000A3			store:
 000000A3  89 01			mov	[ecx],eax
 000000A5  83 C1 04			add	ecx,4
 000000A8  B8 00000000			mov	eax,0
 000000AD  EB EE			jmp	alldone
 000000AF			jmAtoI	ENDP
				;----------------------------------------------------------------
 000000AF			jmReadLine	PROC
 000000AF			nextread:
 000000AF  E8 00000000 E		call	ReadChar
 000000B4  88 06			mov	[esi],al
 000000B6  E8 00000000 E		call	WriteChar
 000000BB  3C 1B			cmp	al,ESCAPE
 000000BD  74 1B			je	outofhere
 000000BF  3C 20			cmp	al,SPC
 000000C1  74 18			je	jmConvert
 000000C3  3C 2A			cmp	al,multOP
 000000C5  74 1C			je	storeSign
 000000C7  3C 2B			cmp	al,addOP
 000000C9  74 18			je	storeSign
 000000CB  3C 2D			cmp	al,subOP
 000000CD  74 14			je	storeSign
 000000CF  3C 2F			cmp	al,divOP
 000000D1  74 10			je	storeSign
 000000D3  3C 0D			cmp	al,CR
 000000D5  74 1E			je	calc
 000000D7  46				inc	esi
 000000D8  EB D5			jmp	nextread
 000000DA			outofhere:
 000000DA  C3				ret
 000000DB			jmConvert:
 000000DB  E8 FFFFFF94			call	jmAtoI
 000000E0  46				inc	esi
 000000E1  EB CC			jmp	nextread
 000000E3			storeSign:
 000000E3  B9 00000075 R		mov	ecx,offset	calcmem
 000000E8  83 C1 04			add	ecx,4
 000000EB  88 01			mov	[ecx],al
 000000ED  83 C1 04			add	ecx,4
 000000F0  46				inc	esi
 000000F1  8B FE			mov	edi,esi	;catch edi back up
 000000F3  EB BA			jmp	nextread
 000000F5			calc:
 000000F5  B0 0A			mov	al,LF
 000000F7  E8 00000000 E		call	WriteChar
 000000FC  47				inc	edi
 000000FD  E8 FFFFFF72			call	jmAtoI
 00000102  B9 00000075 R		mov	ecx,offset	calcmem	;reset ecx ptr
 00000107  B0 20			mov	al,SPC
 00000109  88 06			mov	[esi],al
 0000010B  46				inc	esi
 0000010C  B0 3D			mov	al,'='
 0000010E  88 06			mov	[esi],al
 00000110  46				inc	esi
 00000111  8B 01			mov	eax,[ecx]	;first number
 00000113  8A 51 04			mov	dl,[ecx+4]	;op
 00000116  8B 59 08			mov	ebx,[ecx+8]	;second number
 00000119  E8 00000017			call	jmCalc
 0000011E  BF 00000075 R		mov	edi,offset	calcmem
 00000123  BB 00000000			mov	ebx,0
 00000128  89 1F			mov	[edi],ebx
 0000012A  89 5F 04			mov	[edi+4],ebx
 0000012D  89 5F 08			mov	[edi+8],ebx
 00000130  E9 FFFFFF7A			jmp	nextread
 00000135			jmReadLine	ENDP
				;----------------------------------------------------------------
 00000135			jmCalc	PROC
 00000135  80 FA 2B			cmp	dl,addOP
 00000138  74 10			je	calcAdd
 0000013A  80 FA 2D			cmp	dl,subOP
 0000013D  74 0F			je	calcSub
 0000013F  80 FA 2A			cmp	dl,multOP
 00000142  74 0E			je	calcMult
 00000144  80 FA 2F			cmp	dl,divOP
 00000147  74 0D			je	calcDiv
 00000149			done:
 00000149  C3				ret
 0000014A			calcAdd:
 0000014A  03 C3			add	eax,ebx
 0000014C  EB 11			jmp	store
 0000014E			calcSub:
 0000014E  2B C3			sub	eax,ebx
 00000150  EB 0D			jmp	store
 00000152			calcMult:
 00000152  F7 E3			mul	ebx
 00000154  EB 09			jmp	store
 00000156			calcDiv:
 00000156  BA 00000000			mov	edx,0
 0000015B  F7 F3			div	ebx
 0000015D  EB 2B			jmp	divStore
 0000015F			store:
 0000015F  89 01			mov	[ecx],eax	;hold answer
 00000161  E8 FFFFFEC3			call	countDigits
 00000166  B0 20			mov	al,SPC
 00000168  88 06			mov	[esi],al
 0000016A  41				inc	ecx
 0000016B  03 F1			add	esi,ecx
 0000016D  BB 00000075 R		mov	ebx,offset	calcmem
 00000172  8B 03			mov	eax,[ebx]	;restore answer
 00000174  E8 FFFFFE96			call	ItoA
 00000179  49				dec	ecx
 0000017A  03 F1			add	esi,ecx	;esi past answer
 0000017C  B0 0D			mov	al,CR
 0000017E  88 06			mov	[esi],al
 00000180  46				inc	esi
 00000181  B0 0A			mov	al,LF
 00000183  88 06			mov	[esi],al
 00000185  46				inc	esi
 00000186  8B FE			mov	edi,esi
 00000188  EB BF			jmp done
 0000018A			divStore:
 0000018A  89 01			mov	[ecx],eax	;hold answer
 0000018C  89 51 04			mov	[ecx+4],edx	;hold remainder
 0000018F  E8 FFFFFE95			call	countDigits
 00000194  B0 20			mov	al,SPC
 00000196  88 06			mov	[esi],al
 00000198  41				inc	ecx
 00000199  03 F1			add	esi,ecx
 0000019B  BB 00000075 R		mov	ebx,offset	calcmem
 000001A0  8B 03			mov	eax,[ebx]	;restore answer
 000001A2  E8 FFFFFE68			call	ItoA
 000001A7  49				dec	ecx
 000001A8  03 F1			add	esi,ecx	;esi past answer
 000001AA  B0 20			mov	al,SPC
 000001AC  88 06			mov	[esi],al
 000001AE  46				inc	esi
 000001AF  B0 52			mov	al,'R'
 000001B1  88 06			mov	[esi],al
 000001B3  46				inc	esi
 000001B4  B0 3A			mov	al,':'
 000001B6  88 06			mov	[esi],al
 000001B8  46				inc	esi
 000001B9  B9 00000075 R		mov	ecx,offset	calcmem
 000001BE  8B 41 04			mov	eax,[ecx+4]	;remainder to eax
 000001C1  E8 FFFFFE63			call	countDigits
 000001C6  B0 20			mov	al,SPC
 000001C8  88 06			mov	[esi],al
 000001CA  41				inc	ecx
 000001CB  03 F1			add	esi,ecx
 000001CD  BB 00000075 R		mov	ebx,offset	calcmem
 000001D2  8B 43 04			mov	eax,[ebx+4]	;remainder to eax again
 000001D5  E8 FFFFFE35			call	ItoA
 000001DA  49				dec	ecx
 000001DB  03 F1			add	esi,ecx
 000001DD  B0 0D			mov	al,CR
 000001DF  88 06			mov	[esi],al
 000001E1  46				inc	esi
 000001E2  B0 0A			mov	al,LF
 000001E4  88 06			mov	[esi],al
 000001E6  46				inc	esi
 000001E7  8B FE			mov	edi,esi
 000001E9  E9 FFFFFF5B			jmp done
 000001EE			jmCalc	ENDP
				;----------------------------------------------------------------
 000001EE			main PROC
 000001EE  B9 00000075 R		mov	ecx,offset calcmem
 000001F3  BE 00000010 R		mov	esi,offset outmem
 000001F8  BF 00000010 R		mov	edi,offset outmem
 000001FD  E8 FFFFFEAD			call	jmReadLine
 00000202  B0 00			mov	al,0
 00000204  88 06			mov	[esi],al
 00000206  BA 00000004 R		mov	edx,offset	ofilename
 0000020B  E8 00000000 E		call	CreateOutputFile
 00000210  A3 00000000 R		mov	fd,eax
 00000215  BA 00000010 R		mov	edx,offset	outmem
 0000021A  E8 FFFFFE24			call	myWriteToFile
 0000021F  A1 00000000 R		mov	eax,fd
 00000224  E8 00000000 E		call	CloseFile
					exit
 00000229  6A 00	   *	    push   +000000000h
 0000022B  E8 00000000 E   *	    call   ExitProcess
 00000230			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.14.26430.0	    06/26/18 19:52:10

(calc.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000081 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000230 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ItoA . . . . . . . . . . . . . .	P Near	 0000000F _TEXT	Length= 0000001A Public STDCALL
  next . . . . . . . . . . . . .	L Near	 00000014 _TEXT	
  done . . . . . . . . . . . . .	L Near	 00000028 _TEXT	
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
countDigits  . . . . . . . . . .	P Near	 00000029 _TEXT	Length= 0000001A Public STDCALL
  next . . . . . . . . . . . . .	L Near	 00000033 _TEXT	
  done . . . . . . . . . . . . .	L Near	 00000042 _TEXT	
jmAtoI . . . . . . . . . . . . .	P Near	 00000074 _TEXT	Length= 0000003B Public STDCALL
  nextdigit  . . . . . . . . . .	L Near	 0000007E _TEXT	
  alldone  . . . . . . . . . . .	L Near	 0000009D _TEXT	
  store  . . . . . . . . . . . .	L Near	 000000A3 _TEXT	
jmCalc . . . . . . . . . . . . .	P Near	 00000135 _TEXT	Length= 000000B9 Public STDCALL
  done . . . . . . . . . . . . .	L Near	 00000149 _TEXT	
  calcAdd  . . . . . . . . . . .	L Near	 0000014A _TEXT	
  calcSub  . . . . . . . . . . .	L Near	 0000014E _TEXT	
  calcMult . . . . . . . . . . .	L Near	 00000152 _TEXT	
  calcDiv  . . . . . . . . . . .	L Near	 00000156 _TEXT	
  store  . . . . . . . . . . . .	L Near	 0000015F _TEXT	
  divStore . . . . . . . . . . .	L Near	 0000018A _TEXT	
jmReadLine . . . . . . . . . . .	P Near	 000000AF _TEXT	Length= 00000086 Public STDCALL
  nextread . . . . . . . . . . .	L Near	 000000AF _TEXT	
  outofhere  . . . . . . . . . .	L Near	 000000DA _TEXT	
  jmConvert  . . . . . . . . . .	L Near	 000000DB _TEXT	
  storeSign  . . . . . . . . . .	L Near	 000000E3 _TEXT	
  calc . . . . . . . . . . . . .	L Near	 000000F5 _TEXT	
main . . . . . . . . . . . . . .	P Near	 000001EE _TEXT	Length= 00000042 Public STDCALL
myReadLine . . . . . . . . . . .	P Near	 00000060 _TEXT	Length= 00000014 Public STDCALL
  nextread . . . . . . . . . . .	L Near	 00000060 _TEXT	
  outofhere  . . . . . . . . . .	L Near	 00000073 _TEXT	
myWriteLine  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000000F Public STDCALL
  Next . . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  lineout  . . . . . . . . . . .	L Near	 0000000E _TEXT	
myWriteToFile  . . . . . . . . .	P Near	 00000043 _TEXT	Length= 0000001D Public STDCALL
  nextchar . . . . . . . . . . .	L Near	 00000043 _TEXT	
  alldone  . . . . . . . . . . .	L Near	 0000005F _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CR . . . . . . . . . . . . . . .	Number	 0000000Dh   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
ESCAPE . . . . . . . . . . . . .	Number	 0000001Bh   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LF . . . . . . . . . . . . . . .	Number	 0000000Ah   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
SPC  . . . . . . . . . . . . . .	Number	 00000020h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
addOP  . . . . . . . . . . . . .	Number	 0000002Bh   
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buf2 . . . . . . . . . . . . . .	Byte	 00000074 _DATA	
buf  . . . . . . . . . . . . . .	Byte	 0000000F _DATA	
calcmem  . . . . . . . . . . . .	DWord	 00000075 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
divOP  . . . . . . . . . . . . .	Number	 0000002Fh   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fd . . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
multOP . . . . . . . . . . . . .	Number	 0000002Ah   
ofilename  . . . . . . . . . . .	Byte	 00000004 _DATA	
outmem . . . . . . . . . . . . .	Byte	 00000010 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
subOP  . . . . . . . . . . . . .	Number	 0000002Dh   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
